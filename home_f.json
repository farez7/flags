{"v":"5.7.11","fr":25,"ip":0,"op":87,"w":350,"h":350,"nm":"Comp 3","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Layer 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175.2,264.557,0],"ix":2,"l":2},"a":{"a":0,"k":[0.2,89.557,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"ŝlosilo pli pura","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"ŝlosilo pli pura 2","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.495,-1.916],[-0.96,-2.168]],"o":[[0.573,1.894],[0.593,2.295],[0,0]],"v":[[7.733,19.885],[9.165,25.644],[11.5,32.354]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.043,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.274,-1.816],[-0.599,-1.523],[-0.8,-0.64],[-0.934,-0.482],[-1.192,-1.144],[-3.004,-2.671],[-6.963,-3.958],[-0.048,-0.048],[-5.15,-2.48],[-4.503,5.632],[3.168,4.028],[1.334,0.906],[3.148,0.954],[5.341,2.289],[4.101,2.48],[4.724,4.24],[0.592,1.062],[0.237,0.759],[1.731,4.707],[0.415,0.446],[0.896,-0.363],[0.218,-1.239],[0.117,-1.692],[0.145,-1.918],[-0.025,-2.086]],"o":[[0.244,1.618],[0.368,0.936],[0.838,0.67],[1.478,0.763],[2.909,2.766],[6.057,5.246],[0.048,0],[4.96,2.814],[5.758,2.773],[3.398,-4.251],[-0.954,-1.336],[-2.766,-1.765],[-5.532,-1.717],[-4.387,-1.86],[-5.421,-3.278],[-0.905,-0.812],[-0.387,-0.695],[-1.494,-4.786],[-0.21,-0.572],[-0.658,-0.707],[-1.395,0.565],[-0.291,1.66],[0,1.924],[-0.157,2.081],[0.022,1.837]],"v":[[3.083,43.632],[4.312,48.362],[5.985,50.908],[8.817,51.968],[12.775,55.688],[21.645,63.843],[41.008,77.96],[41.151,78.055],[56.125,86.306],[74.787,84.53],[73.772,69.9],[70.244,66.562],[61.134,62.842],[44.728,57.071],[31.995,50.585],[16.828,39.476],[14.423,36.756],[13.559,34.536],[9.208,20.206],[8.353,18.604],[5.692,18.013],[4.079,21.14],[3.407,26.075],[2.888,31.871],[2.69,38.126]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[66,78],"ix":2},"a":{"a":0,"k":[66,78],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[19]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":5.454,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":46.753,"s":[0]},{"t":52.2080078125,"s":[19]}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.495,-1.916],[0.96,-2.168]],"o":[[-0.573,1.894],[-0.593,2.295],[0,0]],"v":[[-0.618,19.885],[-2.05,25.644],[-4.385,32.354]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.043,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.093],[0.287,-1.806],[0.615,-1.518],[0.082,-0.205],[0.122,0.862],[-0.616,8.125],[-0.082,-1.354],[-0.164,-1.929]],"o":[[-0.041,1.847],[-0.246,1.642],[-0.082,0.205],[-0.37,-0.821],[-1.19,-8.043],[0.245,1.313],[0,1.929],[0.164,2.052]],"v":[[4.434,38.127],[4.024,43.626],[2.792,48.345],[2.546,48.961],[1.89,46.417],[3.162,22.041],[3.695,26.063],[4.228,31.89]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.093],[0.287,-1.806],[0.615,-1.518],[0.082,-0.205],[0.616,-0.492],[0.944,-0.451],[1.19,-1.149],[2.996,-2.667],[6.977,-3.98],[0.041,-0.041],[5.13,-2.462],[4.514,5.622],[-3.2,4.021],[-1.355,0.903],[-3.16,0.944],[-5.335,2.257],[-4.104,2.462],[-4.719,4.227],[-0.616,1.026],[-0.246,0.78],[-1.723,4.719],[-0.411,0.451],[-0.903,-0.369],[-0.204,-1.231],[0,-0.287],[-0.082,-1.354],[-0.164,-1.929]],"o":[[-0.041,1.847],[-0.246,1.642],[-0.082,0.205],[-0.37,0.739],[-0.862,0.698],[-1.477,0.78],[-2.913,2.75],[-6.073,5.253],[-0.04,0],[-4.965,2.832],[-5.786,2.79],[-3.405,-4.268],[0.944,-1.313],[2.749,-1.765],[5.499,-1.724],[4.391,-1.888],[5.416,-3.283],[0.903,-0.821],[0.369,-0.698],[1.477,-4.76],[0.205,-0.575],[0.656,-0.698],[1.396,0.575],[0.042,0.287],[0.245,1.313],[0,1.929],[0.164,2.052]],"v":[[4.434,38.127],[4.024,43.626],[2.792,48.345],[2.546,48.961],[1.15,50.89],[-1.722,51.957],[-5.661,55.691],[-14.525,63.857],[-33.895,77.973],[-34.017,78.056],[-48.996,86.304],[-67.668,84.539],[-66.642,69.889],[-63.112,66.565],[-54.002,62.831],[-37.629,57.086],[-24.866,50.602],[-9.724,39.482],[-7.302,36.773],[-6.441,34.516],[-2.092,20.194],[-1.229,18.594],[1.438,18.019],[3.038,21.138],[3.162,22.041],[3.695,26.063],[4.228,31.89]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-58,77],"ix":2},"a":{"a":0,"k":[-58,77],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[-14]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":5.454,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":46.753,"s":[0]},{"t":52.2080078125,"s":[-14]}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.71,-1.294],[1.503,-0.668],[3.213,-0.876],[2.921,1.669],[2.378,1.043],[3.089,-0.626],[1.418,-0.042],[-3.838,0.542],[-0.418,0.042],[-0.376,0.042],[0,0],[-1.252,-0.584],[-0.626,-1.168],[-3.588,3.296],[-0.709,0.25]],"o":[[-1.669,0.083],[-3.088,1.293],[-3.213,0.876],[-2.253,-1.293],[-2.88,-1.335],[-1.418,0.292],[3.462,-1.669],[0.418,-0.084],[0.334,-0.042],[0,0],[1.377,0],[1.334,0.626],[3.088,6.008],[0.542,-0.501],[1.961,-0.793]],"v":[[64.112,30.898],[59.314,32.191],[50.01,35.946],[40.247,35.237],[33.989,30.647],[24.641,30.647],[20.345,31.231],[31.276,27.727],[32.528,27.518],[33.654,27.393],[33.862,27.393],[38.077,27.643],[40.038,30.564],[56.352,29.771],[58.146,28.478]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.886274516582,0.129411771894,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.967,-0.605],[0.192,-0.005],[0.079,0.175],[-0.014,0.125],[-0.943,0.483],[-0.126,-0.144],[-0.003,-0.102]],"o":[[-0.162,0.102],[-0.192,0.005],[-0.052,-0.115],[0.119,-1.053],[0.17,-0.087],[0.067,0.076],[0.031,1.085]],"v":[[52.866,45.144],[52.332,45.337],[51.858,45.075],[51.828,44.704],[53.458,42.125],[53.989,42.124],[54.071,42.412]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.886274516582,0.129411771894,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.792,-1.121],[0.355,-0.01],[0.146,0.324],[-0.026,0.232],[-1.747,0.895],[-0.234,-0.266],[-0.005,-0.188]],"o":[[-0.301,0.188],[-0.355,0.01],[-0.096,-0.212],[0.221,-1.951],[0.316,-0.162],[0.124,0.141],[0.057,2.011]],"v":[[53.509,52.514],[52.519,52.872],[51.64,52.386],[51.584,51.698],[54.605,46.92],[55.589,46.918],[55.74,47.451]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.886274516582,0.129411771894,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.251,-0.25],[0.418,-2.378],[0.459,-0.751],[2.17,-0.459],[1.335,0],[0.96,0],[0,0],[5.424,0.084],[0.584,10.64],[0,0.042],[-1.21,-0.334],[-0.793,0.25],[-0.584,1.627],[-0.209,3.88],[-1.252,1.126],[-0.292,0],[-0.084,-0.626],[-0.459,-3.463],[-1.043,-1.252],[-1.628,-0.501],[-5.174,0],[-0.25,0.793],[0.667,0.459],[1.043,0.626],[-2.419,2.837],[-3.421,-0.667],[-4.339,-2.587],[-1.168,-0.626],[-0.96,0.084],[-0.459,0.876],[-0.667,1.335],[-0.543,0.25],[-0.542,-0.417],[-0.334,-0.584],[-1.167,-1.335]],"o":[[-0.084,2.42],[-0.124,0.876],[-1.085,1.919],[-1.293,0.292],[-0.96,0],[0,0],[-5.465,0],[-7.218,-0.167],[0,-0.042],[1.085,0.709],[0.834,0.209],[1.669,-0.542],[1.294,-3.63],[0.084,-1.669],[0.208,-0.209],[0.625,0.084],[0.292,3.505],[0.208,1.586],[1.127,1.293],[4.965,1.46],[0.709,0],[0.334,-0.96],[-1.001,-0.667],[-3.213,-1.919],[2.253,-2.629],[5.007,1.001],[1.085,0.667],[0.793,0.459],[1.168,-0.084],[0.667,-1.377],[0.292,-0.542],[0.584,-0.292],[0.542,0.376],[0.876,1.544],[0.209,0.25]],"v":[[78.592,75.835],[77.84,83.011],[77.047,85.557],[71.498,88.728],[67.451,89.312],[64.655,89.061],[40.121,89.061],[23.807,88.853],[4.406,81.759],[4.406,81.676],[7.827,83.345],[10.372,83.387],[13.501,79.465],[15.796,68.116],[17.215,63.443],[18.008,63.067],[18.926,64.528],[19.218,75.042],[20.886,79.506],[25.31,81.968],[41.081,84.055],[43.459,83.22],[41.958,80.591],[38.745,79.006],[37.159,69.284],[46.797,66.947],[60.525,73.331],[63.905,75.25],[66.992,76.669],[68.995,74.166],[70.998,70.118],[72.124,68.742],[74.002,68.992],[75.253,70.536],[77.923,75.125]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.886274516582,0.129411771894,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.208,-3.922],[0.418,-2.378],[0.459,-0.751],[2.17,-0.459],[1.335,0],[0.96,0],[0,0],[5.424,0.084],[0.584,10.64],[0,0.042],[0.042,1.878],[-0.625,6.509],[-4.298,4.882],[-3.171,1.586],[-0.209,0.084],[-3.838,0.542],[-0.418,0.042],[-0.376,0.042],[0,0],[-1.252,-0.584],[-0.626,-1.168],[-3.588,3.296],[-0.709,0.25],[-1.71,-1.294],[-0.292,-0.167],[-2.003,-1.836],[-0.667,-0.793],[-0.542,-1.46],[-0.291,-2.17],[-0.084,-2.295],[-0.125,-3.129]],"o":[[-0.084,2.42],[-0.124,0.876],[-1.085,1.919],[-1.293,0.292],[-0.96,0],[0,0],[-5.465,0],[-7.218,-0.167],[0,-0.042],[-0.084,-1.878],[-0.167,-6.593],[0.585,-6.259],[2.379,-2.712],[0.209,-0.084],[3.462,-1.669],[0.418,-0.084],[0.334,-0.042],[0,0],[1.377,0],[1.334,0.626],[3.088,6.008],[0.542,-0.501],[1.961,-0.793],[0.334,0.25],[2.252,1.46],[0.793,0.751],[1.002,1.126],[0.71,2.003],[0.334,2.253],[0.125,3.129],[0.167,3.964]],"v":[[78.592,75.835],[77.84,83.011],[77.047,85.557],[71.498,88.728],[67.451,89.312],[64.655,89.061],[40.121,89.061],[23.807,88.853],[4.406,81.759],[4.406,81.676],[4.197,75.96],[4.864,56.224],[10.664,37.907],[19.76,31.523],[20.345,31.231],[31.276,27.727],[32.528,27.518],[33.654,27.393],[33.862,27.393],[38.077,27.643],[40.038,30.564],[56.352,29.771],[58.146,28.478],[64.112,30.898],[65.073,31.565],[71.457,36.572],[73.667,38.909],[75.879,42.163],[77.673,47.712],[78.174,54.597],[78.508,63.985]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.96862745285,0.184313729405,0.262745112181,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":5,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.011,-0.797],[0.13,-0.454],[0.997,-0.465],[1.263,0.499],[0.342,1.315]],"o":[[0.764,0.227],[0.006,0.472],[-0.302,1.058],[-1.231,0.574],[-1.263,-0.499],[0,0]],"v":[[41.135,6.618],[42.127,8.612],[41.984,10.017],[39.806,12.362],[35.846,12.522],[33.213,9.61]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.043,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[36.75,8.532],"ix":2},"a":{"a":0,"k":[36.75,8.532],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6.233,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":47.532,"s":[60,60]},{"t":53.7666015625,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.521,0.302],[-0.769,-0.11],[-0.961,-0.165],[0.356,0.741],[0.165,0.165],[0,0],[0.138,0.164],[0.302,0.494],[0.44,1.043],[0.247,0.274],[0.383,-0.522],[0.11,-0.165],[-0.328,-0.329],[-0.163,-0.44],[-0.906,-0.878],[-0.055,-0.192],[0.44,0],[0.411,0.11],[0.741,0.082]],"o":[[0.411,0.604],[0.959,0.137],[0.275,0.055],[-0.082,-0.192],[0,0],[-0.166,-0.192],[-0.356,-0.467],[-0.633,-0.933],[-0.165,-0.357],[-0.44,-0.494],[-0.11,0.164],[0.44,-0.137],[0.358,0.329],[0.44,1.207],[0.165,0.137],[0.082,0.44],[-0.411,-0.027],[-0.713,-0.22],[-0.576,-0.027]],"v":[[32.48,-2.139],[34.512,-1.206],[37.393,-0.904],[39.753,-1.069],[39.341,-1.618],[39.314,-1.618],[38.847,-2.112],[37.832,-3.511],[36.212,-6.475],[35.664,-7.491],[34.292,-7.573],[33.934,-7.079],[35.251,-6.832],[35.938,-5.57],[37.996,-2.386],[38.354,-1.92],[37.53,-1.151],[36.322,-1.508],[34.127,-1.645]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.275,-0.439],[-0.056,-0.027],[0,0],[-0.769,-0.11],[-0.961,-0.165],[0.356,0.741],[0.165,0.165],[0,0],[0.138,0.164],[0.302,0.494],[0.44,1.043],[0.247,0.274],[0.383,-0.522],[0.11,-0.165],[0.356,-0.631],[0.055,-0.164],[0.083,-0.357]],"o":[[0.027,0.027],[0.027,0.027],[0.411,0.604],[0.959,0.137],[0.275,0.055],[-0.082,-0.192],[0,0],[-0.166,-0.192],[-0.356,-0.467],[-0.633,-0.933],[-0.165,-0.357],[-0.44,-0.494],[-0.11,0.164],[-0.411,0.576],[-0.083,0.137],[-0.165,0.329],[-0.11,0.494]],"v":[[32.343,-2.276],[32.453,-2.166],[32.48,-2.139],[34.512,-1.206],[37.393,-0.904],[39.753,-1.069],[39.341,-1.618],[39.314,-1.618],[38.847,-2.112],[37.832,-3.511],[36.212,-6.475],[35.664,-7.491],[34.292,-7.573],[33.934,-7.079],[32.755,-5.241],[32.535,-4.801],[32.151,-3.786]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.549],[-2.879,0],[0,1.549],[2.879,0]],"o":[[0,1.549],[2.879,0],[0,-1.549],[-2.879,0]],"v":[[18.529,-0.47],[23.741,2.335],[28.954,-0.47],[23.741,-3.274]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.549],[-2.879,0],[0,1.549],[2.879,0]],"o":[[0,1.549],[2.879,0],[0,-1.549],[-2.879,0]],"v":[[46.078,-0.675],[51.29,2.129],[56.502,-0.675],[51.29,-3.479]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.024],[-1.024,0],[0,1.024],[1.024,0]],"o":[[0,1.024],[1.024,0],[0,-1.024],[-1.024,0]],"v":[[45.243,-15.85],[47.097,-13.997],[48.95,-15.85],[47.097,-17.704]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019610882,0.972549021244,0.992156863213,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.916],[-2.294,0],[0,2.916],[2.294,0]],"o":[[0,2.916],[2.294,0],[0,-2.916],[-2.294,0]],"v":[[42.27,-13.828],[46.424,-8.549],[50.578,-13.828],[46.424,-19.108]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":11.688,"s":[46.25,-14.5],"to":[0,0.25],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":17.662,"s":[46.25,-13],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":23.636,"s":[46.25,-14.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":29.61,"s":[46.25,-13],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":35.585,"s":[46.25,-14.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":41.559,"s":[46.25,-13],"to":[0,0],"ti":[0,0.25]},{"t":47.5322265625,"s":[46.25,-14.5]}],"ix":2},"a":{"a":0,"k":[46.25,-14.5],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6.233,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":47.532,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"t":53.767,"s":[100,100]},{"i":{"x":[0.582,0.582],"y":[1,1]},"o":{"x":[0.18,0.18],"y":[0,0]},"t":69,"s":[100,100]},{"i":{"x":[0.702,0.702],"y":[1,1]},"o":{"x":[0.347,0.347],"y":[0,0]},"t":71.286,"s":[0,0]},{"t":73,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.024],[-1.024,0],[0,1.024],[1.024,0]],"o":[[0,1.024],[1.024,0],[0,-1.024],[-1.024,0]],"v":[[22.447,-16.37],[24.301,-14.517],[26.155,-16.37],[24.301,-18.224]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019610882,0.972549021244,0.992156863213,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.916],[-2.294,0],[0,2.916],[2.294,0]],"o":[[0,2.916],[2.294,0],[0,-2.916],[-2.294,0]],"v":[[19.475,-14.348],[23.628,-9.069],[27.782,-14.348],[23.628,-19.628]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":11.688,"s":[24,-14.75],"to":[0,0.25],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":17.662,"s":[24,-13.25],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":23.636,"s":[24,-14.75],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":29.61,"s":[24,-13.25],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":35.585,"s":[24,-14.75],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":41.559,"s":[24,-13.25],"to":[0,0],"ti":[0,0.25]},{"t":47.5322265625,"s":[24,-14.75]}],"ix":2},"a":{"a":0,"k":[24,-14.75],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6.233,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":47.532,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"t":53.767,"s":[100,100]},{"i":{"x":[0.582,0.582],"y":[1,1]},"o":{"x":[0.18,0.18],"y":[0,0]},"t":69,"s":[100,100]},{"i":{"x":[0.702,0.702],"y":[1,1]},"o":{"x":[0.347,0.347],"y":[0,0]},"t":71.286,"s":[0,0]},{"t":73,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[44.689,0.587],"to":[-1.282,-0.306],"ti":[1.282,0.306]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"t":6.233,"s":[37,-1.25],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":53.767,"s":[37,-1.25],"to":[1.282,0.306],"ti":[-1.282,-0.306]},{"t":60,"s":[44.689,0.587]}],"ix":2},"a":{"a":0,"k":[37,-1.25],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-0.125],[0.209,0.084],[1.334,1.21],[2.17,-0.209],[0.96,-0.542],[0.375,-0.375],[0.042,-0.292],[0.793,2.212],[2.253,0.709],[1.71,-0.584],[1.127,-1.043],[-2.42,-3.839],[2.921,0.459],[1.543,-0.626],[0.709,-1.335],[-0.041,0.292],[-1.127,0.96],[-1.669,0.084],[-1.503,-0.793],[-0.375,-0.375],[0.167,0.793],[-1.419,2.67],[-2.962,0.626],[-1.836,-0.501],[-1.46,-1.753],[-0.209,-2.253],[0.209,-1.669],[-0.918,0.501],[-1.503,-0.25],[-1.377,-1.335],[-0.333,-1.878]],"o":[[-0.209,-0.084],[-1.586,-0.793],[-1.586,-1.502],[-1.127,0.125],[-0.459,0.25],[-0.209,0.25],[0.333,-2.337],[-0.793,-2.253],[-1.752,-0.542],[-1.502,0.501],[-3.255,3.171],[-2.671,-1.252],[-1.67,-0.25],[-1.419,0.542],[0.042,-0.334],[0.251,-1.502],[1.251,-1.085],[1.71,-0.084],[0.458,0.25],[-0.334,-0.751],[-0.709,-2.962],[1.46,-2.67],[1.837,-0.376],[2.212,0.542],[1.461,1.711],[0.167,1.711],[0.376,-0.96],[1.377,-0.709],[1.919,0.292],[1.377,1.335],[0.042,0.125]],"v":[[62.635,-69.366],[62.01,-69.617],[58.171,-73.33],[52.079,-75.291],[48.909,-74.29],[47.615,-73.33],[46.446,-72.037],[45.987,-79.046],[41.273,-83.97],[35.89,-83.678],[31.885,-81.383],[31.05,-68.865],[22.538,-71.494],[17.532,-71.244],[14.319,-68.281],[14.443,-69.199],[16.405,-73.121],[21.078,-74.582],[26.044,-73.705],[27.295,-72.829],[26.502,-75.166],[27.587,-84.011],[34.638,-89.352],[40.23,-89.06],[46.071,-85.722],[48.407,-79.547],[48.24,-74.456],[50.285,-76.71],[54.833,-77.21],[60.049,-74.832],[62.593,-69.783]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.501960813999,0.149019613862,0.078431375325,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.546,-0.626],[0.666,0.057],[3.251,-1.693],[0.745,-3.417],[1.705,0.825],[1.763,0.339],[2.783,-0.709],[2.695,-2.872],[0.625,-4.59],[1.543,-4.339],[-2.044,4.631],[-1.543,-2.754],[-2.337,3.171],[-1.669,-2.879],[-3.046,-1.335],[-3.589,4.047],[-2.42,-1.418],[-2.837,-2.837],[-0.834,-0.542],[0.292,-2.211],[3.421,3.714],[-0.626,-1.919],[-0.751,-0.626],[-0.084,1.043],[-0.709,1.752],[-3.255,1.753],[-0.542,-2.044],[-1.334,-1.168],[-0.96,-0.668],[-0.084,-1.878],[-0.208,0.668],[0.042,1.001],[1.085,1.627],[-1.962,-3.714],[-2.963,-2.962],[-0.709,-2.879],[3.255,10.723],[-0.25,-11.307],[0.042,-1.168],[0.041,-0.835],[0.543,-2.337],[0.251,-0.125],[0.167,0.334],[0,0.334],[0.751,1.419],[2.503,3.296],[0.376,1.126],[0.877,0.918],[0.585,-2.169],[1.085,-0.876],[3.004,4.131],[0.125,-2.712],[1.669,-2.128],[1.127,3.088],[2.67,1.836],[0.751,0.709],[0.375,1.46],[-0.167,1.544],[0.375,-1.252],[0.125,-2.795],[-0.251,-1.21],[-2.795,-1.252],[2.462,2.211],[1.168,-1.21],[1.503,-0.751],[0.084,1.711],[1.085,0.96],[0.542,0.25],[1.252,0.459],[0.625,0.417],[0.208,1.961],[0.834,-2.044],[-0.96,-2.253],[-1.419,-0.292],[1.252,0.334],[1.67,1.669],[0.96,2.253],[0.585,2.545],[-0.334,-2.003],[2.837,-3.38],[0.709,2.545],[0.543,1.919],[1.21,-2.754],[0.667,-2.712],[-0.25,-2.128],[0.083,0.459],[0.376,2.003],[0.167,1.627],[-0.209,4.339],[-1.794,4.172],[-3.004,3.338],[-2.295,1.043],[-2.587,0.125],[-1.628,-0.417],[-1.502,-0.96],[-0.542,-1.293],[-0.876,1.085],[-1.168,0.751],[-2.753,0.167]],"o":[[-0.609,0.152],[-3.617,-0.308],[-3.102,1.615],[-1.705,-0.825],[-1.616,-0.782],[-2.82,-0.543],[-3.777,0.962],[-3.171,3.38],[-0.626,4.59],[2.044,-4.59],[-0.333,3.129],[-0.96,-3.797],[0.835,3.213],[1.669,2.879],[-3.255,-4.297],[1.877,-2.128],[3.462,2.003],[0.709,0.71],[1.961,1.293],[1.086,-4.882],[1.877,0.793],[0.292,1.001],[-0.876,-1.168],[0.084,-1.961],[1.334,-3.463],[-0.625,2.044],[0.459,1.711],[0.876,0.751],[1.252,1.252],[-0.084,-0.751],[0.251,-0.96],[-0.042,-1.919],[3.964,1.335],[1.961,3.672],[2.086,2.086],[-0.209,-11.224],[5.757,9.847],[0.043,1.127],[-0.042,0.835],[-0.084,2.378],[-0.084,0.209],[-0.292,0.167],[-0.167,-0.334],[-0.084,-1.627],[-1.961,-3.714],[-0.71,-0.918],[-0.333,-1.127],[0.376,2.212],[-0.333,1.335],[-0.041,-5.132],[0.752,2.587],[-0.084,2.712],[0.458,-3.255],[-1.084,-3.046],[-0.834,-0.584],[-1.127,-1.001],[-0.418,-1.502],[-0.5,1.168],[-0.752,2.67],[-0.042,1.21],[0.625,3.004],[-3.129,1.085],[-0.125,1.669],[-1.21,1.168],[1.335,-1.085],[-0.084,-1.418],[-0.417,-0.375],[-1.21,-0.584],[-0.709,-0.292],[-1.669,-1.127],[-0.126,2.253],[-0.876,2.253],[0.542,1.335],[-0.834,0.96],[-2.252,-0.626],[-1.752,-1.711],[-1.043,-2.378],[-0.417,1.961],[0.667,4.339],[1.209,-2.337],[-0.542,-1.919],[0.418,2.921],[-1.085,2.545],[-0.501,2.086],[-0.5,0.167],[-0.459,-2.044],[-0.292,-1.544],[-0.458,-4.297],[0.25,-4.548],[1.752,-4.089],[1.71,-1.878],[2.378,-1.085],[1.669,-0.125],[1.752,0.417],[1.21,0.709],[0.543,-1.293],[0.876,-1.043],[2.337,-1.46],[2.629,-0.209]],"v":[[60.685,-65.835],[59.036,-65.479],[48.476,-63.143],[41.937,-55.37],[36.823,-57.845],[31.804,-59.756],[23.301,-58.941],[13.703,-53.86],[8.696,-41.134],[6.359,-27.448],[12.451,-41.259],[14.328,-32.163],[16.498,-43.387],[19.962,-34.083],[27.055,-27.282],[27.639,-42.219],[35.15,-44.305],[40.573,-33.916],[42.994,-32.205],[46.498,-26.531],[43.411,-41.384],[47.375,-37.003],[48.584,-34.208],[47.791,-39.59],[49.336,-44.973],[56.554,-53.151],[57.012,-46.892],[59.349,-42.219],[62.311,-40.466],[64.607,-36.169],[65.274,-38.297],[65.608,-41.301],[63.898,-46.767],[72.451,-38.005],[78.96,-27.365],[84.634,-20.689],[79.335,-53.818],[88.306,-20.606],[88.556,-17.101],[88.181,-14.681],[87.263,-7.629],[86.888,-7.004],[86.012,-7.379],[85.886,-8.422],[84.342,-12.97],[76.874,-22.734],[74.954,-25.863],[73.911,-29.117],[73.619,-22.442],[71.699,-18.937],[67.694,-33.54],[68.862,-25.571],[66.276,-18.019],[65.357,-27.699],[59.558,-35.376],[57.055,-37.17],[54.885,-41.009],[54.175,-46.183],[52.799,-42.594],[51.422,-34.375],[51.631,-30.661],[57.179,-23.735],[47.917,-25.613],[45.705,-21.19],[41.533,-18.436],[43.119,-23.151],[41.658,-27.073],[40.157,-27.991],[36.526,-29.618],[34.482,-30.578],[32.021,-35.835],[29.558,-29.702],[29.475,-22.984],[32.562,-20.147],[28.974,-19.771],[22.799,-22.775],[18.751,-28.533],[16.54,-36.002],[17.083,-30.035],[13.995,-17.602],[13.786,-25.32],[12.159,-31.037],[11.366,-22.859],[8.029,-15.265],[7.903,-8.84],[6.986,-9.757],[6.276,-15.891],[5.275,-20.355],[4.691,-33.29],[7.57,-46.558],[14.871,-57.448],[20.296,-61.704],[27.848,-63.582],[32.855,-63.164],[37.611,-60.619],[40.615,-57.824],[41.992,-61.454],[45.122,-64.124],[52.923,-66.586]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.086274512112,0.007843137719,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.042,-1.168],[0.041,-0.835],[0.543,-2.337],[0.251,-0.125],[0.167,0.334],[0,0.334],[0.751,1.419],[2.503,3.296],[0.376,1.126],[0.877,0.918],[0.585,-2.169],[1.085,-0.876],[3.004,4.131],[0.125,-2.712],[1.669,-2.128],[1.127,3.088],[2.67,1.836],[0.751,0.709],[0.375,1.46],[-0.167,1.544],[0.375,-1.252],[0.125,-2.795],[-0.251,-1.21],[-2.795,-1.252],[2.462,2.211],[1.168,-1.21],[1.503,-0.751],[0.084,1.711],[1.085,0.96],[0.542,0.25],[1.252,0.459],[0.625,0.417],[0.208,1.961],[0.834,-2.044],[-0.96,-2.253],[-1.419,-0.292],[1.252,0.334],[1.67,1.669],[0.96,2.253],[0.585,2.545],[-0.334,-2.003],[2.837,-3.38],[0.709,2.545],[0.543,1.919],[1.21,-2.754],[0.667,-2.712],[-0.25,-2.128],[0.083,0.459],[0.376,2.003],[0.167,1.627],[-0.209,4.339],[-1.794,4.172],[-3.004,3.338],[-2.295,1.043],[-2.587,0.125],[-1.628,-0.417],[-1.502,-0.96],[-0.542,-1.293],[-0.876,1.085],[-1.168,0.751],[-2.753,0.167],[-2.546,-0.626],[-1.795,-0.709],[-2.587,-2.211],[-1.001,-1.627],[-0.167,-0.334],[-0.25,-11.307]],"o":[[-0.042,0.835],[-0.084,2.378],[-0.084,0.209],[-0.292,0.167],[-0.167,-0.334],[-0.084,-1.627],[-1.961,-3.714],[-0.71,-0.918],[-0.333,-1.127],[0.376,2.212],[-0.333,1.335],[-0.041,-5.132],[0.752,2.587],[-0.084,2.712],[0.458,-3.255],[-1.084,-3.046],[-0.834,-0.584],[-1.127,-1.001],[-0.418,-1.502],[-0.5,1.168],[-0.752,2.67],[-0.042,1.21],[0.625,3.004],[-3.129,1.085],[-0.125,1.669],[-1.21,1.168],[1.335,-1.085],[-0.084,-1.418],[-0.417,-0.375],[-1.21,-0.584],[-0.709,-0.292],[-1.669,-1.127],[-0.126,2.253],[-0.876,2.253],[0.542,1.335],[-0.834,0.96],[-2.252,-0.626],[-1.752,-1.711],[-1.043,-2.378],[-0.417,1.961],[0.667,4.339],[1.209,-2.337],[-0.542,-1.919],[0.418,2.921],[-1.085,2.545],[-0.501,2.086],[-0.5,0.167],[-0.459,-2.044],[-0.292,-1.544],[-0.458,-4.297],[0.25,-4.548],[1.752,-4.089],[1.71,-1.878],[2.378,-1.085],[1.669,-0.125],[1.752,0.417],[1.21,0.709],[0.543,-1.293],[0.876,-1.043],[2.337,-1.46],[2.629,-0.209],[1.919,0.459],[3.296,1.335],[1.335,1.127],[0.209,0.334],[5.757,9.847],[0.043,1.127]],"v":[[88.556,-17.101],[88.181,-14.681],[87.263,-7.629],[86.888,-7.004],[86.012,-7.379],[85.886,-8.422],[84.342,-12.97],[76.874,-22.734],[74.954,-25.863],[73.911,-29.117],[73.619,-22.442],[71.699,-18.937],[67.694,-33.54],[68.862,-25.571],[66.276,-18.019],[65.357,-27.699],[59.558,-35.376],[57.055,-37.17],[54.885,-41.009],[54.175,-46.183],[52.799,-42.594],[51.422,-34.375],[51.631,-30.661],[57.179,-23.735],[47.917,-25.613],[45.705,-21.19],[41.533,-18.436],[43.119,-23.151],[41.658,-27.073],[40.157,-27.991],[36.526,-29.618],[34.482,-30.578],[32.021,-35.835],[29.558,-29.702],[29.475,-22.984],[32.562,-20.147],[28.974,-19.771],[22.799,-22.775],[18.751,-28.533],[16.54,-36.002],[17.083,-30.035],[13.995,-17.602],[13.786,-25.32],[12.159,-31.037],[11.366,-22.859],[8.029,-15.265],[7.903,-8.84],[6.986,-9.757],[6.276,-15.891],[5.275,-20.355],[4.691,-33.29],[7.57,-46.558],[14.871,-57.448],[20.296,-61.704],[27.848,-63.582],[32.855,-63.164],[37.611,-60.619],[40.615,-57.824],[41.992,-61.454],[45.122,-64.124],[52.923,-66.586],[60.685,-65.835],[66.276,-63.999],[75.246,-58.951],[78.752,-54.861],[79.335,-53.818],[88.306,-20.606]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.501960813999,0.149019613862,0.078431375325,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.212,-0.751],[1.752,-2.211],[3.588,-0.793],[0,0],[2.419,2.795],[0.376,0.751],[-6.426,-1.586],[-1.543,-1.669],[-1.252,0.918],[-4.465,-0.167]],"o":[[-0.125,2.754],[-2.337,2.837],[0,0],[-3.671,0.084],[-0.543,-0.626],[5.383,-3.839],[2.212,0.584],[0.042,-1.544],[3.588,-2.67],[2.336,0.084]],"v":[[62.729,-67.128],[59.725,-59.451],[50.379,-53.902],[26.971,-54.486],[17.208,-58.867],[15.789,-60.953],[34.732,-64.583],[40.657,-61.412],[43.077,-65.167],[55.845,-68.255]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.084,-0.751],[1.752,-2.212],[3.589,-0.793],[0,0],[2.42,2.795],[0.376,0.751],[-0.251,2.503],[-0.041,0.292],[-1.127,0.96],[-1.669,0.084],[-1.503,-0.793],[-0.375,-0.375],[0.167,0.793],[-1.419,2.67],[-2.962,0.626],[-1.836,-0.501],[-1.46,-1.753],[-0.209,-2.253],[0.209,-1.669],[-0.918,0.501],[-1.503,-0.25],[-1.377,-1.335],[-0.333,-1.878],[0,-0.125]],"o":[[-0.125,2.754],[-2.337,2.837],[0,0],[-3.671,0.084],[-0.542,-0.626],[-1.209,-2.253],[0.042,-0.334],[0.251,-1.502],[1.251,-1.085],[1.71,-0.084],[0.458,0.25],[-0.334,-0.751],[-0.709,-2.962],[1.46,-2.67],[1.837,-0.376],[2.212,0.542],[1.461,1.711],[0.167,1.711],[0.376,-0.96],[1.377,-0.709],[1.919,0.292],[1.377,1.335],[0.042,0.125],[0.125,0.751]],"v":[[62.719,-67.113],[59.714,-59.436],[50.368,-53.886],[26.96,-54.471],[17.198,-58.852],[15.779,-60.938],[14.319,-68.281],[14.443,-69.199],[16.405,-73.121],[21.078,-74.582],[26.044,-73.705],[27.295,-72.829],[26.502,-75.166],[27.587,-84.011],[34.638,-89.352],[40.23,-89.06],[46.071,-85.722],[48.407,-79.547],[48.24,-74.456],[50.285,-76.71],[54.833,-77.21],[60.049,-74.832],[62.593,-69.783],[62.635,-69.366]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.086274512112,0.007843137719,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.043,-6.467],[0.459,0.751],[0.626,1.293],[1.878,2.045],[0.876,2.378],[0.96,-0.835],[1.043,-0.125],[1.252,1.001],[0.543,2.378],[1.961,0.96],[0.667,0.376],[0.501,2.587],[-1.21,-2.712],[-2.753,-1.126],[3.213,-0.042],[0.418,-0.209],[0.376,-0.417],[1.251,-0.417],[0.667,1.168],[0.333,0.793],[1.919,0.626],[0.125,2.003],[-0.042,-1.585],[-1.127,-1.085],[0,-0.334],[0.375,-0.083],[3.046,1.127],[1.209,0.709],[0.418,1.335],[0,-1.377],[0.418,-0.793],[1.376,-1.21],[0.209,-1.544],[-5.216,-5.466],[-7.594,-3.129],[1.043,0.125],[5.549,7.302],[1.001,4.757],[0.084,0.417],[0,0.167],[0,2.211],[-1.085,4.715],[-13.56,2.295],[-8.261,-16.564],[-0.543,-2.629]],"o":[[-0.668,-0.501],[-0.751,-1.252],[-1.168,-2.503],[-1.752,-1.836],[0.084,1.168],[-0.835,0.709],[-1.585,0.167],[-1.877,-1.544],[-0.458,-2.128],[-0.71,-0.334],[-2.295,-1.252],[-0.96,2.795],[1.21,2.712],[-2.713,1.753],[-0.459,0],[-0.5,0.209],[-0.918,0.96],[-1.294,0.376],[-0.418,-0.709],[-0.71,-1.878],[-1.919,-0.584],[-0.333,1.544],[0.084,1.544],[0.251,0.209],[-0.042,0.376],[-3.338,0.71],[-1.21,-0.459],[-1.168,-0.709],[0,1.419],[0,0.918],[-0.834,1.669],[-1.21,1.043],[-1.127,7.677],[5.842,6.008],[-1.043,-0.125],[-8.93,-1.21],[-3.005,-3.964],[-0.084,-0.417],[-0.042,-0.167],[-0.418,-2.253],[-0.042,-4.798],[3.213,-13.686],[17.4,-2.837],[1.21,2.42],[1.502,6.425]],"v":[[87.055,-3.707],[85.385,-5.668],[83.55,-9.632],[78.834,-16.433],[74.203,-22.4],[73.578,-19.396],[70.489,-18.227],[65.9,-19.187],[63.563,-25.905],[59.934,-31.12],[57.806,-31.996],[54.259,-38.714],[54.635,-30.035],[60.852,-23.944],[51.38,-23.36],[50.003,-23.109],[48.751,-22.066],[45.581,-19.73],[42.034,-20.856],[41.325,-23.276],[36.484,-26.489],[32.27,-30.244],[31.645,-25.571],[33.355,-21.315],[33.898,-20.481],[32.98,-19.813],[24.051,-21.232],[20.338,-22.275],[17.792,-25.446],[17.75,-21.232],[17.291,-18.52],[13.036,-15.14],[10.95,-11.051],[18.793,9.811],[40.282,21.703],[37.153,21.327],[14.204,9.478],[8.32,-3.791],[8.112,-5.001],[8.029,-5.46],[7.403,-12.094],[8.738,-26.489],[37.277,-51.774],[84.217,-30.953],[86.888,-23.318]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.043,-6.467],[0.333,-1.544],[1.794,-2.712],[5.632,-1.878],[0.125,-0.042],[2.044,-0.334],[1.461,-0.084],[5.632,0.542],[1.043,0.125],[5.549,7.302],[1.001,4.757],[0.084,0.417],[0,0.167],[0,2.211],[-1.085,4.715],[-13.56,2.295],[-8.261,-16.564],[-0.543,-2.629]],"o":[[-0.251,1.586],[-0.752,3.254],[-3.296,4.882],[-0.084,0.042],[-2.044,0.751],[-1.461,0.209],[-5.674,0.626],[-1.043,-0.125],[-8.93,-1.21],[-3.005,-3.964],[-0.084,-0.417],[-0.042,-0.167],[-0.418,-2.253],[-0.042,-4.798],[3.213,-13.686],[17.4,-2.837],[1.21,2.42],[1.502,6.425]],"v":[[87.055,-3.707],[86.179,0.966],[82.465,9.353],[68.362,19.366],[67.986,19.492],[61.853,21.077],[57.514,21.62],[40.282,21.703],[37.153,21.327],[14.204,9.478],[8.32,-3.791],[8.112,-5.001],[8.029,-5.46],[7.403,-12.094],[8.738,-26.489],[37.277,-51.774],[84.217,-30.953],[86.888,-23.318]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.028,-0.191],[-3.185,-0.136],[-1.687,-0.408],[-1.171,-0.599],[2.042,0.871],[4.139,-1.497],[0.408,-0.762],[0.055,-0.463]],"o":[[3.213,0],[1.743,0.082],[1.252,0.272],[0.299,-2.478],[-4.193,-1.824],[-0.816,0.272],[-0.218,0.408],[-0.027,0.19]],"v":[[38.945,23.568],[48.529,23.813],[53.702,24.412],[57.351,25.719],[55.527,19.892],[41.423,20.246],[39.326,21.69],[38.999,23.024]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.594,1.443],[-0.408,-0.463],[-0.653,-0.163],[-3.757,0.463],[-0.762,1.307],[-0.081,0.817],[-0.19,1.715],[2.042,0.871],[4.139,-1.497],[0.408,-0.762],[0.055,-0.463],[0.028,-0.191],[0,-0.164],[-2.858,-0.735],[-1.171,-0.871],[0.055,-1.035],[1.551,-0.354]],"o":[[0.027,0.653],[0.436,0.49],[3.676,0.871],[1.525,-0.19],[0.409,-0.708],[0.109,-1.225],[0.299,-2.478],[-4.193,-1.824],[-0.816,0.272],[-0.218,0.408],[-0.027,0.19],[-0.027,0.163],[2.969,0.055],[1.442,0.354],[0.843,0.626],[-0.081,1.607],[-3.758,0.898]],"v":[[38.513,31.409],[38.057,40.152],[39.799,40.996],[51.098,41.65],[55.074,39.744],[56.645,30.375],[57.354,25.719],[55.53,19.892],[41.426,20.246],[39.329,21.69],[39.002,23.024],[38.948,23.568],[38.893,24.086],[47.661,25.256],[51.718,26.917],[53.242,29.504],[49.866,32.39]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.027,-2.233],[0,0],[-0.408,-0.463],[-0.653,-0.163],[-3.757,0.463],[-0.762,1.307],[-0.081,0.817],[3.43,1.47],[4.139,-1.497],[0.408,-0.762],[0.055,-0.463],[0.028,-0.354]],"o":[[0,0],[0.027,0.653],[0.436,0.49],[3.676,0.871],[1.525,-0.19],[0.409,-0.708],[0.246,-2.968],[-4.193,-1.824],[-0.816,0.272],[-0.218,0.408],[-0.027,0.354],[-0.217,2.233]],"v":[[38.51,30.811],[38.51,31.409],[38.054,40.152],[39.797,40.996],[51.096,41.65],[55.071,39.744],[56.643,30.375],[55.527,19.892],[41.423,20.246],[39.326,21.69],[38.999,23.024],[38.89,24.086]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":2,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.044,-2.496],[-0.102,-3.677],[-0.035,-0.574],[0.203,0.101],[0.102,0.034],[0.338,0.303],[0.405,0.506],[0,0],[-1.044,0.371],[-0.168,0.034],[-0.776,-0.068],[-0.068,-0.034]],"o":[[-1.384,3.441],[0.033,0.574],[-0.236,-0.101],[-0.102,-0.034],[-0.404,-0.203],[-0.54,-0.405],[0,0],[0.741,-0.81],[0.135,-0.034],[0.776,-0.304],[0.068,0],[-0.843,2.564]],"v":[[90.35,-13.301],[87.82,-2.608],[87.92,-0.922],[87.279,-1.225],[87.042,-1.36],[85.896,-2.102],[84.479,-3.485],[87.549,-18.597],[90.28,-20.419],[90.753,-20.553],[93.148,-20.891],[93.385,-20.857]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.081,-0.789],[0.218,-0.681],[-0.109,-2.451],[-0.056,-0.164],[0.816,-0.109],[1.852,1.443],[-1.062,0.517],[0.273,3.431],[-0.517,0.762],[-0.707,-0.354],[-0.19,-0.762]],"o":[[-0.055,0.708],[-0.734,2.342],[0,0.163],[-0.737,0.326],[-2.342,0.354],[0.818,-0.871],[2.723,-1.361],[-0.082,-0.899],[0.436,-0.653],[0.709,0.327],[0.19,0.762]],"v":[[97.998,-10.225],[97.643,-8.156],[94.785,-1.485],[94.867,-0.967],[92.553,-0.314],[85.882,-2.111],[88.931,-4.072],[94.322,-11.259],[94.431,-13.928],[96.554,-14.391],[97.916,-12.566]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.033,-2.497],[0.743,-1.687],[2.024,-0.911],[0.843,-0.101],[1.451,0.607],[0.203,0.101],[0.102,0.034],[0.338,0.303],[0.405,0.506],[0,0],[-1.044,0.371],[-0.168,0.034],[-0.776,-0.068],[-0.068,-0.034],[-1.216,-1.585]],"o":[[0,1.855],[-0.843,2.091],[-0.743,0.303],[-1.552,0.236],[-0.236,-0.101],[-0.102,-0.034],[-0.404,-0.203],[-0.54,-0.405],[0,0],[0.741,-0.81],[0.135,-0.034],[0.776,-0.304],[0.068,0],[2.024,0.135],[1.484,1.956]],"v":[[100.4,-11.007],[99.456,-5.61],[94.869,-0.955],[92.542,-0.314],[87.92,-0.922],[87.279,-1.225],[87.042,-1.36],[85.896,-2.102],[84.479,-3.485],[87.549,-18.597],[90.28,-20.419],[90.753,-20.553],[93.148,-20.891],[93.385,-20.857],[98.512,-18.057]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":3,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.626,-3.171],[3.504,-2.504],[6.259,-1.878],[7.302,-0.334],[5.341,1.335],[4.924,6.05],[0.292,1.919],[-5.591,8.721],[-8.929,4.84],[0,0],[-3.714,-3.213],[-0.625,-0.668],[-0.752,-2.378],[-0.585,-2.879],[-0.585,-3.797]],"o":[[-0.876,4.214],[-5.508,3.964],[-7.051,2.044],[-5.507,0.25],[-7.594,-1.877],[-0.333,-1.961],[-1.585,-10.223],[5.424,-8.553],[0,0],[4.673,-1.502],[0.709,0.584],[1.127,2.253],[0.876,2.795],[0.793,3.755],[0.5,3.171]],"v":[[89.265,-15.766],[82.09,-5.335],[63.438,0.841],[41.7,4.012],[25.261,2.885],[5.984,-9.674],[4.982,-15.515],[9.656,-45.515],[33.271,-64.083],[66.36,-57.74],[80.004,-54.194],[81.964,-52.274],[84.801,-45.265],[86.929,-36.753],[89.016,-25.404]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":2,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.088,-5.299],[5.966,-2.044],[0.334,5.674],[3.129,-2.253],[4.465,-0.667],[14.979,1.752],[2.461,1.878],[0.625,4.297],[-1.961,-4.047],[1.919,4.84],[-3.629,4.465],[-1.753,3.463],[0.835,5.507],[0.292,1.919],[-5.591,8.721],[-8.929,4.84],[0,0],[-3.714,-3.213],[-0.625,-0.668],[-1.919,-3.505],[-1.043,-2.962],[0.209,-8.345],[-0.709,-4.047],[-1.002,-3.63]],"o":[[-3.129,5.424],[4.131,-3.88],[-2.128,3.213],[-3.671,2.629],[-14.938,2.253],[-3.046,-0.334],[-3.463,-2.629],[-2.253,3.88],[-5.007,-1.418],[-2.212,-5.424],[2.462,-3.046],[2.419,-4.84],[-0.333,-1.961],[-1.585,-10.223],[5.424,-8.553],[0,0],[4.673,-1.502],[0.709,0.584],[2.671,2.879],[1.544,2.754],[2.796,8.095],[-0.125,4.131],[0.668,3.88],[1.752,6.175]],"v":[[93.772,33.344],[79.837,45.444],[85.928,30.089],[78.459,38.81],[65.775,43.107],[20.629,42.857],[11.909,40.187],[6.777,28.587],[6.318,41.48],[-4.864,31.425],[-2.361,15.277],[4.9,6.181],[5.984,-9.674],[4.982,-15.515],[9.656,-45.515],[33.271,-64.083],[66.36,-57.74],[80.004,-54.194],[81.964,-52.274],[88.598,-42.344],[92.687,-33.832],[94.315,-8.714],[94.898,3.595],[98.613,14.067]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.086274512112,0.007843137719,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":2,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":13,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[44,34],"ix":2},"a":{"a":0,"k":[44,34],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0.779,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":3.896,"s":[100,97.59]},{"t":7.0126953125,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[5]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":6.233,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12.176,"s":[2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":18.117,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":24.059,"s":[2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":30,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":35.941,"s":[2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":41.883,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":47.824,"s":[2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":53.767,"s":[0]},{"t":60,"s":[5]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.011,-0.797],[-0.13,-0.454],[-0.997,-0.465],[-1.263,0.499],[-0.342,1.315]],"o":[[-0.764,0.227],[-0.006,0.472],[0.302,1.058],[1.231,0.574],[1.263,-0.499],[0,0]],"v":[[-37.567,5.206],[-38.56,7.199],[-38.417,8.604],[-36.239,10.949],[-32.279,11.109],[-29.646,8.197]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.043,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-34.543,8.835],"ix":2},"a":{"a":0,"k":[-34.543,8.835],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":6.233,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[60,60]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":47.532,"s":[60,60]},{"t":53.7666015625,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.521,0.302],[0.769,-0.11],[0.961,-0.165],[-0.356,0.741],[-0.165,0.165],[0,0],[-0.138,0.164],[-0.302,0.494],[-0.44,1.043],[-0.247,0.274],[-0.383,-0.522],[-0.11,-0.165],[0.328,-0.329],[0.163,-0.44],[0.906,-0.878],[0.055,-0.192],[-0.44,0],[-0.411,0.11],[-0.741,0.082]],"o":[[-0.411,0.604],[-0.959,0.137],[-0.275,0.055],[0.082,-0.192],[0,0],[0.166,-0.192],[0.356,-0.467],[0.633,-0.933],[0.165,-0.357],[0.44,-0.494],[0.11,0.164],[-0.44,-0.137],[-0.358,0.329],[-0.44,1.207],[-0.165,0.137],[-0.082,0.44],[0.411,-0.027],[0.713,-0.22],[0.576,-0.027]],"v":[[-26.634,-4.93],[-28.665,-3.998],[-31.547,-3.696],[-33.906,-3.86],[-33.495,-4.409],[-33.468,-4.409],[-33.001,-4.903],[-31.986,-6.303],[-30.366,-9.267],[-29.818,-10.282],[-28.446,-10.365],[-28.088,-9.871],[-29.405,-9.624],[-30.091,-8.361],[-32.15,-5.178],[-32.507,-4.711],[-31.683,-3.943],[-30.476,-4.299],[-28.281,-4.437]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.275,-0.439],[0.056,-0.027],[0,0],[0.769,-0.11],[0.961,-0.165],[-0.356,0.741],[-0.165,0.165],[0,0],[-0.138,0.164],[-0.302,0.494],[-0.44,1.043],[-0.247,0.274],[-0.383,-0.522],[-0.11,-0.165],[-0.356,-0.631],[-0.055,-0.164],[-0.083,-0.357]],"o":[[-0.027,0.027],[-0.027,0.027],[-0.411,0.604],[-0.959,0.137],[-0.275,0.055],[0.082,-0.192],[0,0],[0.166,-0.192],[0.356,-0.467],[0.633,-0.933],[0.165,-0.357],[0.44,-0.494],[0.11,0.164],[0.411,0.576],[0.083,0.137],[0.165,0.329],[0.11,0.494]],"v":[[-26.497,-5.068],[-26.607,-4.958],[-26.634,-4.93],[-28.665,-3.998],[-31.547,-3.696],[-33.906,-3.86],[-33.495,-4.409],[-33.468,-4.409],[-33.001,-4.903],[-31.986,-6.303],[-30.366,-9.267],[-29.818,-10.282],[-28.446,-10.365],[-28.088,-9.871],[-26.909,-8.032],[-26.689,-7.593],[-26.304,-6.577]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.549],[2.879,0],[0,1.549],[-2.879,0]],"o":[[0,1.549],[-2.879,0],[0,-1.549],[2.879,0]],"v":[[-2.986,-2.088],[-8.198,0.716],[-13.411,-2.088],[-8.198,-4.892]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.549],[2.879,0],[0,1.549],[-2.879,0]],"o":[[0,1.549],[-2.879,0],[0,-1.549],[2.879,0]],"v":[[-42.51,-2.088],[-47.722,0.716],[-52.934,-2.088],[-47.722,-4.892]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.024],[1.024,0],[0,1.024],[-1.024,0]],"o":[[0,1.024],[-1.024,0],[0,-1.024],[1.024,0]],"v":[[-40.889,-17.077],[-42.742,-15.224],[-44.596,-17.077],[-42.742,-18.931]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019610882,0.972549021244,0.992156863213,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.916],[2.294,0],[0,2.916],[-2.294,0]],"o":[[0,2.916],[-2.294,0],[0,-2.916],[2.294,0]],"v":[[-37.916,-15.466],[-42.07,-10.186],[-46.223,-15.466],[-42.07,-20.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-42,-16],"ix":2},"a":{"a":0,"k":[-42,-16],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":7.013,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":49.87,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"t":53.767,"s":[100,100]},{"i":{"x":[0.582,0.582],"y":[1,1]},"o":{"x":[0.18,0.18],"y":[0,0]},"t":79.714,"s":[100,100]},{"i":{"x":[0.702,0.702],"y":[1,1]},"o":{"x":[0.347,0.347],"y":[0,0]},"t":82,"s":[0,0]},{"t":83.7138671875,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-1.024],[1.024,0],[0,1.024],[-1.024,0]],"o":[[0,1.024],[-1.024,0],[0,-1.024],[1.024,0]],"v":[[-12.913,-17.077],[-14.766,-15.224],[-16.62,-17.077],[-14.766,-18.931]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.949019610882,0.972549021244,0.992156863213,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.916],[2.294,0],[0,2.916],[-2.294,0]],"o":[[0,2.916],[-2.294,0],[0,-2.916],[2.294,0]],"v":[[-9.94,-15.466],[-14.094,-10.186],[-18.247,-15.466],[-14.094,-20.746]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-13.25,-15.25],"ix":2},"a":{"a":0,"k":[-13.25,-15.25],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":7.013,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":11.688,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":49.87,"s":[50,50]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.167,0.167],"y":[0,0]},"t":53.767,"s":[100,100]},{"i":{"x":[0.582,0.582],"y":[1,1]},"o":{"x":[0.18,0.18],"y":[0,0]},"t":79.714,"s":[100,100]},{"i":{"x":[0.702,0.702],"y":[1,1]},"o":{"x":[0.347,0.347],"y":[0,0]},"t":82,"s":[0,0]},{"t":83.7138671875,"s":[100,100]}],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":11.688,"s":[-27.25,-16.5],"to":[0,0.167],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":17.922,"s":[-27.25,-15.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":23.377,"s":[-27.25,-16.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":29.61,"s":[-27.25,-15.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":35.064,"s":[-27.25,-16.5],"to":[0,0],"ti":[0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":41.299,"s":[-27.25,-15.5],"to":[0,0],"ti":[0,0.167]},{"t":46.7529296875,"s":[-27.25,-16.5]}],"ix":2},"a":{"a":0,"k":[-27.25,-16.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.124,0.626],[-0.084,-0.626]],"o":[[0.125,0.584],[-0.334,-0.584]],"v":[[-30.727,-34.985],[-30.477,-33.149]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.752,1.085],[2.128,-0.667],[2.129,0.709],[0,-0.584],[0.584,-1.168],[0.71,-0.709],[0.667,-0.835],[0.543,-1.961],[0.041,-0.459],[0.125,0.918],[-0.918,7.427],[-2.42,4.882],[-2.504,-3.922],[-1.837,-0.876]],"o":[[-0.251,2.253],[-2.128,0.71],[0.626,0.209],[-0.084,1.293],[-0.418,0.918],[-0.709,0.71],[-1.252,1.544],[-0.125,0.459],[-0.251,-0.918],[-1.043,-7.385],[0.667,-5.383],[0.751,4.631],[1.127,1.753],[1.836,0.876]],"v":[[22.889,-35.361],[18.633,-30.604],[12.04,-30.938],[12.667,-27.099],[11.666,-23.386],[9.954,-20.674],[7.702,-18.671],[5.073,-13.289],[4.781,-11.87],[4.28,-14.624],[4.071,-36.988],[8.411,-52.718],[12.625,-39.492],[17.006,-35.277]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":6.233,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":9.351,"s":[100]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":49.87,"s":[100]},{"t":53.7666015625,"s":[0]}],"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.752,1.085],[2.128,-0.667],[2.129,0.709],[0,-0.584],[0.584,-1.168],[0.71,-0.709],[0.667,-0.835],[0.543,-1.961],[0.709,-3.046],[0.292,-0.083],[0.042,0.292],[-0.084,0.25],[0.584,2.212],[1.251,1.627],[1.503,1.168],[1.877,1.335],[1.46,2.337],[1.92,-2.212],[1.419,-0.209],[0.125,3.922],[0.292,0.96],[1.085,1.252],[1.711,-0.417],[0.834,-0.751],[0,-1.126],[1.127,1.586],[0.626,0.292],[0.334,-1.836],[-2.419,-2.796],[-0.375,-0.375],[1.794,2.086],[0.5,1.794],[0.209,0.834],[-0.459,0.459],[0.5,-3.755],[-1.92,-3.254],[1.92,2.169],[-0.167,2.879],[2.546,-1.753],[2.921,-1.043],[-0.877,1.919],[-0.418,2.086],[0.835,-0.709],[1.127,-1.001],[0.667,-1.419],[0.042,-2.212],[0.084,-2.253],[0.793,0.25],[0.166,0.417],[1.294,2.044],[0.418,0.709],[0.333,1.085],[0.209,2.086],[-1.127,2.545],[1.377,-0.626],[2.004,0.542],[2.379,1.961],[-2.504,4.715],[-0.543,2.462],[-3.255,3.88],[-5.007,-0.292],[-1.627,4.172],[-2.712,-0.709],[-2.545,1.168],[-2.461,1.293],[-3.255,0.751],[-3.88,-1.794],[1.043,-4.131],[-5.967,-3.213],[1.376,-0.334],[2.003,-4.256],[2.213,2.712],[3.505,0.25],[6.175,-1.794],[3.255,1.544],[-3.756,1.46],[4.172,-1.085],[3.171,-2.879],[6.425,-3.38],[-3.295,3.588],[1.334,-2.295],[-2.253,-6.926],[-2.879,3.463],[-1.836,0.501],[-1.21,0.25],[-1.043,1.877],[-0.418,2.128],[2.795,-4.381],[-0.334,5.174],[0.375,-2.67],[-2.128,-1.627],[-0.793,2.754],[-4.38,3.797],[-2.295,-4.548],[-2.004,2.837],[-1.252,0.793],[-1.377,-0.501],[-0.542,-1.168],[-0.166,-1.293],[-1.794,1.043],[-1.168,-1.502],[-0.418,-2.128],[-0.167,-2.295],[-1.794,2.837],[-4.632,-2.837],[-1.001,-0.793],[-0.292,-3.129],[-1.001,4.548],[-0.751,1.502],[-0.584,1.168],[-1.377,5.883],[-0.291,-1.836],[-3.088,-4.84],[-1.837,-0.876]],"o":[[-0.251,2.253],[-2.128,0.71],[0.626,0.209],[-0.084,1.293],[-0.418,0.918],[-0.709,0.71],[-1.252,1.544],[-0.793,3.004],[-0.042,0.25],[-0.251,0.042],[-0.084,-0.25],[0.417,-2.295],[-0.5,-1.961],[-1.168,-1.502],[-1.836,-1.418],[-2.295,-1.627],[-0.167,3.046],[-0.917,1.085],[2.253,-3.254],[-0.042,-1.043],[-0.542,-1.627],[-1.001,-1.127],[-1.085,0.25],[-0.794,0.793],[-0.084,-1.961],[-0.418,-0.584],[-2.67,-1.21],[-0.751,3.63],[0.334,0.375],[-2.712,-0.626],[-1.168,-1.377],[-0.251,-0.835],[-0.167,-0.542],[-2.67,2.67],[-0.501,3.755],[-2.671,-1.001],[-1.919,-2.128],[-0.542,3.046],[-2.503,1.794],[1.877,-1.043],[0.876,-1.961],[-0.251,1.043],[-1.167,0.918],[-1.21,1.043],[-1.001,2.003],[-0.042,2.253],[0,0.584],[-0.501,-0.125],[-0.834,-2.211],[-0.417,-0.667],[-0.584,-0.96],[-0.668,-2.003],[-0.334,-2.754],[-1.043,1.085],[-1.961,0.918],[-2.962,-0.793],[5.048,1.669],[1.168,-2.253],[1.085,-4.923],[3.255,-3.839],[-4.256,-1.168],[0.125,2.837],[2.713,0.667],[2.546,-1.168],[2.962,-1.586],[4.131,-0.918],[3.881,1.752],[4.465,-5.716],[-1.461,-0.042],[-4.59,1.085],[-1.419,-3.213],[-2.21,-2.754],[-6.426,-0.417],[-3.463,1.002],[2.754,2.921],[-2.129,3.755],[-4.131,1.043],[-5.341,4.923],[4.798,-0.626],[-0.375,2.629],[-3.631,6.3],[-0.334,-4.506],[1.21,-1.502],[1.252,-0.334],[2.169,-0.417],[1.085,-1.878],[-0.418,5.174],[4.547,-2.462],[1.294,2.378],[-0.418,2.629],[-1.461,-2.42],[1.585,-5.633],[-1.543,4.84],[-0.918,-3.338],[0.834,-1.168],[1.209,-0.751],[1.209,0.417],[0.543,1.21],[0.167,-1.794],[1.836,-1.043],[1.376,1.669],[0.417,2.253],[0.625,-3.296],[-0.96,5.341],[1.084,0.626],[2.462,2.044],[-0.209,-4.631],[0.333,-1.669],[0.585,-1.168],[2.963,-5.716],[0.5,1.794],[0.96,5.675],[1.127,1.753],[1.836,0.876]],"v":[[22.889,-35.361],[18.633,-30.604],[12.04,-30.938],[12.667,-27.099],[11.666,-23.386],[9.954,-20.674],[7.702,-18.671],[5.073,-13.289],[3.362,-4.109],[2.903,-3.442],[2.319,-3.901],[2.361,-4.693],[1.985,-11.578],[-0.518,-17.795],[-4.649,-21.967],[-10.407,-25.848],[-15.497,-31.606],[-19.336,-24.137],[-22.882,-21.926],[-19.419,-33.024],[-19.92,-36.028],[-22.548,-40.201],[-26.137,-41.786],[-28.974,-40.034],[-30.56,-37.155],[-32.396,-42.621],[-33.94,-44.039],[-38.029,-39.366],[-35.776,-28.852],[-34.691,-27.725],[-41.658,-31.939],[-44.245,-36.738],[-44.829,-39.283],[-44.871,-41.786],[-49.794,-31.814],[-47.583,-20.924],[-54.802,-25.472],[-57.764,-33.316],[-62.938,-25.973],[-71.283,-22.092],[-67.193,-26.849],[-65.441,-32.983],[-67.152,-30.27],[-70.865,-27.892],[-73.786,-24.179],[-75.163,-17.711],[-75.247,-10.952],[-75.997,-7.906],[-76.874,-10.285],[-79.377,-16.96],[-80.713,-18.921],[-82.006,-22.092],[-83.508,-28.226],[-82.298,-36.362],[-85.887,-33.65],[-92.145,-33.442],[-99.989,-38.156],[-86.303,-43.622],[-84.175,-50.924],[-78,-64.61],[-64.816,-70.826],[-70.115,-81.425],[-64.857,-75.583],[-56.68,-76.751],[-49.336,-80.799],[-39.906,-84.22],[-27.347,-83.678],[-21.589,-73.413],[-3.563,-75.124],[-7.819,-74.707],[-18.459,-66.07],[-23.509,-75.291],[-32.354,-80.465],[-50.045,-73.372],[-60.56,-74.206],[-49.46,-71.703],[-60.226,-65.194],[-72.034,-60.395],[-84.092,-42.662],[-72.326,-50.715],[-75.747,-43.622],[-77.958,-22.593],[-72.368,-34.568],[-68.028,-38.115],[-64.273,-38.49],[-59.308,-42.412],[-57.305,-48.587],[-62.228,-34.026],[-54.217,-46.543],[-53.967,-38.657],[-52.131,-31.272],[-52.84,-39.533],[-42.994,-53.97],[-41.825,-39.158],[-39.238,-48.88],[-36.192,-51.967],[-32.02,-52.551],[-29.35,-49.881],[-28.432,-46.084],[-26.179,-51.341],[-20.713,-49.756],[-18.501,-43.706],[-17.667,-37.03],[-14.037,-46.334],[-7.736,-32.357],[-4.482,-30.395],[0.191,-21.759],[1.402,-35.611],[2.903,-40.409],[4.864,-43.831],[6.701,-61.438],[7.868,-55.931],[12.625,-39.492],[17.006,-35.277]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.35686275363,0.086274512112,0.007843137719,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.752,1.085],[2.128,-0.667],[2.129,0.709],[0,-0.584],[0.584,-1.168],[0.71,-0.709],[0.667,-0.835],[0.543,-1.961],[0.041,-0.459],[0.584,-2.587],[0.292,-0.083],[0.042,0.292],[-0.084,0.25],[0.584,2.212],[1.251,1.627],[1.503,1.168],[1.877,1.335],[1.46,2.337],[1.92,-2.212],[1.419,-0.209],[0.125,3.922],[0.292,0.96],[1.085,1.252],[1.711,-0.417],[0.834,-0.751],[0,-1.126],[1.127,1.586],[0.626,0.292],[0.334,-1.836],[-2.419,-2.796],[-0.375,-0.375],[1.794,2.086],[0.5,1.794],[0.209,0.834],[-0.459,0.459],[0.5,-3.755],[-1.92,-3.254],[1.92,2.169],[-0.167,2.879],[2.546,-1.753],[2.921,-1.043],[-0.877,1.919],[-0.418,2.086],[0.835,-0.709],[1.127,-1.001],[0.667,-1.419],[0.042,-2.212],[0.084,-2.253],[0.793,0.25],[0.166,0.417],[1.294,2.044],[0.418,0.709],[0.333,1.085],[0.209,2.086],[-1.127,2.545],[1.377,-0.626],[2.004,0.542],[2.379,1.961],[-2.504,4.715],[-0.543,2.462],[-3.255,3.88],[-5.007,-0.292],[-1.627,4.172],[-2.712,-0.709],[-2.545,1.168],[-2.461,1.293],[-3.255,0.751],[-3.88,-1.794],[1.043,-4.131],[-5.967,-3.213],[-1.377,-1.335],[-1.043,-3.797],[-0.291,-1.836],[-0.209,-1.085],[-2.504,-3.922],[-1.837,-0.876]],"o":[[-0.251,2.253],[-2.128,0.71],[0.626,0.209],[-0.084,1.293],[-0.418,0.918],[-0.709,0.71],[-1.252,1.544],[-0.125,0.459],[-0.585,2.587],[-0.042,0.25],[-0.251,0.042],[-0.084,-0.25],[0.417,-2.295],[-0.5,-1.961],[-1.168,-1.502],[-1.836,-1.418],[-2.295,-1.627],[-0.167,3.046],[-0.917,1.085],[2.253,-3.254],[-0.042,-1.043],[-0.542,-1.627],[-1.001,-1.127],[-1.085,0.25],[-0.794,0.793],[-0.084,-1.961],[-0.418,-0.584],[-2.67,-1.21],[-0.751,3.63],[0.334,0.375],[-2.712,-0.626],[-1.168,-1.377],[-0.251,-0.835],[-0.167,-0.542],[-2.67,2.67],[-0.501,3.755],[-2.671,-1.001],[-1.919,-2.128],[-0.542,3.046],[-2.503,1.794],[1.877,-1.043],[0.876,-1.961],[-0.251,1.043],[-1.167,0.918],[-1.21,1.043],[-1.001,2.003],[-0.042,2.253],[0,0.584],[-0.501,-0.125],[-0.834,-2.211],[-0.417,-0.667],[-0.584,-0.96],[-0.668,-2.003],[-0.334,-2.754],[-1.043,1.085],[-1.961,0.918],[-2.962,-0.793],[5.048,1.669],[1.168,-2.253],[1.085,-4.923],[3.255,-3.839],[-4.256,-1.168],[0.125,2.837],[2.713,0.667],[2.546,-1.168],[2.962,-1.586],[4.131,-0.918],[3.881,1.752],[4.465,-5.716],[1.836,1.001],[2.753,2.712],[0.5,1.794],[0.167,1.085],[0.751,4.631],[1.127,1.753],[1.836,0.876]],"v":[[22.878,-35.361],[18.622,-30.604],[12.029,-30.938],[12.656,-27.099],[11.655,-23.386],[9.943,-20.674],[7.691,-18.671],[5.062,-13.289],[4.77,-11.87],[3.351,-4.109],[2.892,-3.442],[2.308,-3.901],[2.35,-4.693],[1.974,-11.578],[-0.529,-17.795],[-4.66,-21.967],[-10.418,-25.848],[-15.508,-31.606],[-19.347,-24.137],[-22.893,-21.926],[-19.43,-33.024],[-19.931,-36.028],[-22.559,-40.201],[-26.148,-41.786],[-28.985,-40.034],[-30.571,-37.155],[-32.407,-42.621],[-33.951,-44.039],[-38.04,-39.366],[-35.787,-28.852],[-34.702,-27.725],[-41.669,-31.939],[-44.256,-36.738],[-44.84,-39.283],[-44.882,-41.786],[-49.805,-31.814],[-47.594,-20.924],[-54.813,-25.472],[-57.775,-33.316],[-62.949,-25.973],[-71.294,-22.092],[-67.204,-26.849],[-65.452,-32.983],[-67.163,-30.27],[-70.876,-27.892],[-73.797,-24.179],[-75.174,-17.711],[-75.258,-10.952],[-76.008,-7.906],[-76.885,-10.285],[-79.388,-16.96],[-80.724,-18.921],[-82.017,-22.092],[-83.519,-28.226],[-82.309,-36.362],[-85.898,-33.65],[-92.156,-33.442],[-100,-38.156],[-86.314,-43.622],[-84.186,-50.924],[-78.011,-64.61],[-64.827,-70.826],[-70.126,-81.425],[-64.868,-75.583],[-56.691,-76.751],[-49.347,-80.799],[-39.917,-84.22],[-27.358,-83.678],[-21.6,-73.413],[-3.574,-75.124],[1.307,-71.536],[6.69,-61.438],[7.857,-55.931],[8.4,-52.718],[12.614,-39.492],[16.995,-35.277]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.501960813999,0.149019613862,0.078431375325,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.042,-4.757],[0.418,-2.253],[0.042,-0.167],[0.084,-0.417],[0.166,-0.626],[0.126,1.127],[0.125,1.043],[0.543,1.168],[2.086,1.711],[2.086,1.127],[0.209,2.462],[1.377,-1.502],[2.503,0.084],[0.876,4.339],[2.546,0.542],[0.459,-1.711],[0.667,0.793],[0.876,-1.418],[0.042,-0.542],[-3.631,-2.128],[2.086,5.758],[-2.128,-4.715],[3.589,3.547],[2.712,-1.669],[1.001,-3.213],[-6.259,-5.132],[-2.879,-1.878],[-0.96,-1.418],[0.626,0.25],[0.084,0.042],[3.338,4.882],[0.751,3.254],[-1.837,7.969],[-1.21,2.42],[-17.399,-2.837],[-3.213,-13.685]],"o":[[-0.042,2.253],[0,0.125],[-0.042,0.417],[-0.125,0.626],[-0.543,-1.001],[-0.083,-1.043],[-0.209,-1.252],[-1.127,-2.462],[-1.836,-1.502],[-2.044,-1.127],[-0.584,2.045],[-1.71,1.836],[3.213,-3.046],[-0.501,-2.545],[-1.877,-0.417],[-0.166,-1.043],[-1.085,-1.252],[-0.251,0.459],[-0.292,4.214],[-6.05,0.709],[-2.379,4.631],[-5.048,-0.375],[-0.376,3.171],[-2.838,1.752],[-2.42,7.719],[2.67,2.17],[1.419,0.918],[-0.625,-0.167],[-0.124,-0.042],[-5.633,-1.877],[-1.794,-2.712],[-1.669,-7.886],[0.584,-2.629],[8.303,-16.564],[13.56,2.295],[1.084,4.715]],"v":[[3.904,-13.08],[3.237,-6.404],[3.154,-5.945],[2.945,-4.735],[2.486,-2.816],[1.526,-6.029],[1.36,-9.2],[0.066,-12.83],[-4.357,-19.589],[-10.657,-22.927],[-14.83,-28.268],[-18.877,-22.718],[-25.552,-19.798],[-21.714,-31.981],[-26.346,-37.697],[-30.727,-34.985],[-31.894,-37.781],[-36.15,-37.906],[-36.526,-36.362],[-30.893,-25.764],[-45.371,-34.693],[-45.789,-19.673],[-59.308,-25.848],[-66.484,-20.215],[-71.909,-11.995],[-67.36,10.411],[-58.473,15.626],[-54.802,19.173],[-56.721,18.547],[-57.096,18.422],[-71.2,8.408],[-74.913,0.022],[-75.622,-24.262],[-72.952,-31.898],[-26.012,-52.718],[2.528,-27.433]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.042,-4.757],[0.418,-2.253],[0.042,-0.167],[0.084,-0.417],[0.166,-0.626],[2.545,-3.421],[8.929,-1.21],[6.676,0.751],[1.46,0.209],[1.419,0.417],[0.626,0.25],[0.084,0.042],[3.338,4.882],[0.751,3.254],[-1.837,7.969],[-1.21,2.42],[-17.399,-2.837],[-3.213,-13.685]],"o":[[-0.042,2.253],[0,0.125],[-0.042,0.417],[-0.125,0.626],[-1.085,4.047],[-5.591,7.26],[-6.551,0.918],[-1.502,-0.084],[-1.377,-0.25],[-0.625,-0.167],[-0.124,-0.042],[-5.633,-1.877],[-1.794,-2.712],[-1.669,-7.886],[0.584,-2.629],[8.303,-16.564],[13.56,2.295],[1.084,4.715]],"v":[[3.904,-13.08],[3.237,-6.404],[3.154,-5.945],[2.945,-4.735],[2.486,-2.816],[-2.896,8.533],[-25.886,20.383],[-46.207,20.675],[-50.587,20.133],[-54.802,19.173],[-56.721,18.547],[-57.096,18.422],[-71.2,8.408],[-74.913,0.022],[-75.622,-24.262],[-72.952,-31.898],[-26.012,-52.718],[2.528,-27.433]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.044,-2.496],[0.102,-3.677],[0.035,-0.574],[-0.203,0.101],[-0.102,0.034],[-0.338,0.303],[-0.405,0.506],[0,0],[1.044,0.371],[0.168,0.034],[0.776,-0.068],[0.068,-0.034]],"o":[[1.384,3.441],[-0.033,0.574],[0.236,-0.101],[0.102,-0.034],[0.404,-0.203],[0.54,-0.405],[0,0],[-0.741,-0.81],[-0.135,-0.034],[-0.776,-0.304],[-0.068,0],[0.843,2.564]],"v":[[-79.078,-14.249],[-76.548,-3.556],[-76.649,-1.869],[-76.008,-2.173],[-75.771,-2.308],[-74.625,-3.05],[-73.208,-4.433],[-76.278,-19.545],[-79.009,-21.366],[-79.482,-21.501],[-81.877,-21.839],[-82.114,-21.805]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.081,-0.789],[-0.218,-0.681],[0.109,-2.451],[0.056,-0.164],[-0.816,-0.109],[-1.852,1.443],[1.062,0.517],[-0.273,3.431],[0.517,0.762],[0.707,-0.354],[0.19,-0.762]],"o":[[0.055,0.708],[0.734,2.342],[0,0.163],[0.737,0.326],[2.342,0.354],[-0.818,-0.871],[-2.723,-1.361],[0.082,-0.899],[-0.436,-0.653],[-0.709,0.327],[-0.19,0.762]],"v":[[-86.727,-11.173],[-86.372,-9.103],[-83.514,-2.433],[-83.596,-1.915],[-81.281,-1.262],[-74.61,-3.059],[-77.66,-5.019],[-83.051,-12.207],[-83.16,-14.875],[-85.283,-15.338],[-86.644,-13.514]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.033,-2.497],[-0.743,-1.687],[-2.024,-0.911],[-0.843,-0.101],[-1.451,0.607],[-0.203,0.101],[-0.102,0.034],[-0.338,0.303],[-0.405,0.506],[0,0],[1.044,0.371],[0.168,0.034],[0.776,-0.068],[0.068,-0.034],[1.216,-1.585]],"o":[[0,1.855],[0.843,2.091],[0.743,0.303],[1.552,0.236],[0.236,-0.101],[0.102,-0.034],[0.404,-0.203],[0.54,-0.405],[0,0],[-0.741,-0.81],[-0.135,-0.034],[-0.776,-0.304],[-0.068,0],[-2.024,0.135],[-1.484,1.956]],"v":[[-89.129,-11.955],[-88.185,-6.558],[-83.598,-1.903],[-81.27,-1.262],[-76.649,-1.869],[-76.008,-2.173],[-75.771,-2.308],[-74.625,-3.05],[-73.208,-4.433],[-76.278,-19.545],[-79.009,-21.366],[-79.482,-21.501],[-81.877,-21.839],[-82.114,-21.805],[-87.241,-19.005]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":3,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":7,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[-37,21.5],"ix":2},"a":{"a":0,"k":[-37,21.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":0,"s":[-8]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":7.013,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":12.857,"s":[-2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":18.701,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":24.546,"s":[-2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":30.39,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":36.233,"s":[-2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":42.078,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":47.922,"s":[-2]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":53.767,"s":[0]},{"t":60,"s":[-8]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.618,-0.077],[0.464,-0.386],[1.082,-1.198],[3.206,-0.077],[4.945,-1.082],[1.39,-1.043],[1.313,-1.082],[1.97,-2.898],[1.585,-1.584],[-0.27,0.734],[-3.941,3.748],[-2.279,1.468],[-2.009,-0.193],[-0.348,-0.193],[-0.348,-0.232],[-0.425,-0.348],[-0.115,-0.077],[-0.424,-0.193],[-0.425,-0.193],[-0.502,-0.116],[-0.54,-0.039],[-0.425,-0.038],[-0.541,0.077],[-0.309,0.077],[-0.309,0.077],[-0.348,0.116],[-0.773,0.888],[-0.155,0.386],[-1.005,0.27],[-0.231,0.039],[0,0],[-0.232,0],[0,0]],"o":[[-0.58,0.232],[-1.236,1.082],[-2.164,2.357],[-5.023,0.116],[-1.661,0.348],[-1.353,1.005],[-2.665,2.202],[-1.274,1.854],[0.232,-0.734],[1.932,-5.138],[2.009,-1.854],[1.662,-1.043],[0.424,0.039],[0.424,0.309],[0.425,0.232],[0.116,0.116],[0.387,0.232],[0.425,0.155],[0.425,0.155],[0.503,0.155],[0.425,0.077],[0.579,0.039],[0.347,0.038],[0.308,-0.077],[0.347,-0.077],[1.082,-0.348],[0.27,-0.309],[0,-1.005],[0.232,-0.077],[0,0],[0.193,-0.039],[0,0],[0.695,-0.039]],"v":[[-22.729,27.602],[-24.275,28.568],[-27.481,32.2],[-35.903,36.295],[-50.7,33.938],[-55.258,36.218],[-59.315,39.308],[-66.346,46.996],[-70.364,52.444],[-69.592,50.242],[-60.319,36.797],[-53.907,31.775],[-47.338,28.568],[-45.948,29.07],[-45.021,30.229],[-43.784,31.234],[-43.514,31.504],[-42.317,32.161],[-41.08,32.702],[-39.729,33.127],[-38.105,33.475],[-36.869,33.629],[-35.169,33.591],[-34.165,33.513],[-33.237,33.32],[-32.233,33.05],[-29.219,31.311],[-28.563,30.307],[-26.941,27.873],[-26.207,27.757],[-25.395,27.641],[-24.738,27.525],[-24.622,27.525]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.098039217293,0.203921571374,0.364705890417,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.967,-0.605],[-0.192,-0.005],[-0.079,0.175],[0.014,0.125],[0.943,0.483],[0.126,-0.144],[0.003,-0.102]],"o":[[0.162,0.102],[0.192,0.005],[0.052,-0.115],[-0.119,-1.053],[-0.17,-0.087],[-0.067,0.076],[-0.031,1.085]],"v":[[-41.713,45.349],[-41.179,45.542],[-40.705,45.28],[-40.675,44.909],[-42.305,42.33],[-42.836,42.33],[-42.917,42.617]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.098039217293,0.203921571374,0.364705890417,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.792,-1.121],[-0.355,-0.01],[-0.146,0.324],[0.026,0.232],[1.747,0.895],[0.234,-0.266],[0.005,-0.188]],"o":[[0.301,0.188],[0.355,0.01],[0.096,-0.212],[-0.221,-1.951],[-0.316,-0.162],[-0.124,0.141],[-0.057,2.011]],"v":[[-42.356,52.719],[-41.366,53.078],[-40.486,52.592],[-40.431,51.904],[-43.452,47.125],[-44.436,47.124],[-44.587,47.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.098039217293,0.203921571374,0.364705890417,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.279,3.847],[-0.254,0.264],[-0.338,-0.142],[-0.114,-0.153],[-0.035,-0.972],[-0.116,-3.2]],"o":[[1.786,-3.64],[0.116,-0.348],[0.254,-0.264],[0.176,0.074],[0.581,0.78],[0.116,3.2],[0,0]],"v":[[-56.723,70.3],[-53.722,58.546],[-53.22,57.579],[-52.224,57.305],[-51.796,57.676],[-51.123,60.466],[-50.775,70.068]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.098039217293,0.203921571374,0.364705890417,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.166,0.834],[0.043,-0.793],[7.218,-0.167],[5.465,0],[0,0],[2.21,0.501],[1.085,0.626],[0.709,2.295],[0.124,1.461],[-2.462,-0.501],[-3.088,1.502],[-3.213,1.21],[-2.587,1.126],[-2.294,1.126],[-0.418,-0.376],[0.167,-0.501],[1.836,-2.253],[-3.755,-2.044],[-1.21,-0.125],[-5.05,0.125],[-1.877,4.256],[-0.501,3.338],[-0.585,0.084],[0.041,-0.793],[0.084,-2.253],[-0.5,-1.335],[-1.461,0.083],[-0.625,1.544]],"o":[[0,0.793],[-0.584,10.64],[-5.466,0.084],[0,0],[-2.212,0],[-1.21,-0.292],[-2.044,-1.252],[-0.459,-1.419],[1.46,2.003],[3.38,0.709],[3.129,-1.46],[2.671,-0.96],[2.337,-1.002],[0.543,-0.25],[0.417,0.334],[-0.834,2.796],[-2.044,2.545],[1.085,0.584],[5.007,0.542],[4.464,-0.125],[1.377,-3.088],[0.083,-0.542],[0.793,-0.125],[-0.125,2.295],[-0.084,1.419],[0.543,1.335],[1.627,-0.084],[0.334,-0.835]],"v":[[6.825,79.632],[6.741,81.968],[-12.618,89.061],[-28.974,89.27],[-55.428,89.27],[-61.978,88.728],[-65.483,87.434],[-69.655,81.676],[-70.49,77.337],[-64.398,81.342],[-54.468,79.465],[-45.247,74.875],[-37.194,72.33],[-30.477,68.658],[-28.849,68.575],[-28.641,70.077],[-33.606,77.17],[-33.773,86.141],[-30.226,87.017],[-15.121,87.643],[-4.649,81.342],[-2.52,71.454],[-1.644,70.118],[-0.601,71.913],[-0.935,78.714],[-0.56,82.97],[2.695,85.348],[6.032,82.135]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.098039217293,0.203921571374,0.364705890417,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.167,-6.593],[0.084,-1.168],[0.043,-0.793],[7.218,-0.167],[5.465,0],[0,0],[2.21,0.501],[1.085,0.626],[0.709,2.295],[0.124,1.461],[0.042,0.96],[0,0.209],[-0.042,3.755],[-0.084,1.877],[-0.584,1.502],[-4.381,4.047],[-2.253,1.461],[-2.003,-0.167],[-0.334,-0.167],[-0.333,-0.25],[-0.418,-0.334],[-0.125,-0.084],[-0.418,-0.167],[-0.417,-0.167],[-0.5,-0.084],[-0.542,-0.042],[-0.417,0],[-0.543,0.042],[-0.334,0.084],[-0.334,0.084],[-0.334,0.084],[-0.751,0.876],[-0.167,0.375],[-1.001,0.25],[-0.209,0.042],[0,0],[-0.334,0],[-0.626,-0.084],[0,0],[-0.334,-0.042],[-0.458,-0.042],[-3.629,-1.794],[-2.378,-2.712],[-0.585,-6.259]],"o":[[-0.042,1.127],[0,0.793],[-0.584,10.64],[-5.466,0.084],[0,0],[-2.212,0],[-1.21,-0.292],[-2.044,-1.252],[-0.459,-1.419],[-0.125,-0.96],[0,-0.209],[-0.167,-3.755],[0,-1.878],[0.084,-1.586],[2.003,-5.591],[2.003,-1.836],[1.669,-1.043],[0.418,0.042],[0.418,0.334],[0.459,0.25],[0.125,0.125],[0.375,0.209],[0.417,0.167],[0.418,0.167],[0.501,0.167],[0.418,0.083],[0.585,0.042],[0.333,0],[0.291,-0.083],[0.333,-0.083],[1.085,-0.375],[0.292,-0.292],[0,-1.001],[0.209,-0.084],[0,0],[0.167,-0.042],[0.709,-0.042],[0,0],[0.375,0.042],[0.417,0.042],[4.006,0.626],[3.171,1.544],[4.299,4.882],[0.667,6.509]],"v":[[6.95,76.169],[6.825,79.632],[6.741,81.968],[-12.618,89.061],[-28.974,89.27],[-55.428,89.27],[-61.978,88.728],[-65.483,87.434],[-69.655,81.676],[-70.49,77.337],[-70.698,74.499],[-70.74,73.832],[-70.907,62.566],[-70.782,56.934],[-70.365,51.76],[-60.309,36.781],[-53.925,31.774],[-47.333,28.561],[-45.956,29.062],[-45.038,30.23],[-43.786,31.231],[-43.494,31.523],[-42.326,32.149],[-41.075,32.692],[-39.739,33.109],[-38.112,33.485],[-36.86,33.61],[-35.149,33.61],[-34.148,33.526],[-33.23,33.318],[-32.229,33.067],[-29.225,31.315],[-28.557,30.313],[-26.93,27.893],[-26.221,27.768],[-25.386,27.643],[-24.634,27.518],[-22.715,27.601],[-22.506,27.601],[-21.38,27.727],[-20.087,27.893],[-8.613,31.732],[0.483,38.116],[6.283,56.433]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.035294119269,0.364705890417,0.643137276173,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.028,-0.191],[3.185,-0.136],[1.687,-0.408],[1.171,-0.599],[-3.418,1.693],[-4.139,-1.497],[-0.408,-0.762],[-0.055,-0.463]],"o":[[-3.213,0],[-1.743,0.082],[-1.252,0.272],[-0.299,-2.478],[4.097,-2.03],[0.816,0.272],[0.218,0.408],[0.027,0.19]],"v":[[-27.674,22.621],[-37.258,22.865],[-42.431,23.465],[-46.08,24.771],[-45.256,10.945],[-31.152,11.299],[-29.055,12.742],[-27.728,22.076]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":2,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.594,1.443],[0.408,-0.463],[0.653,-0.163],[3.757,0.463],[0.762,1.307],[0.081,0.817],[0.19,1.715],[-2.042,0.871],[-4.139,-1.497],[-0.408,-0.762],[-0.055,-0.463],[-0.028,-0.191],[0,-0.164],[2.858,-0.735],[1.171,-0.871],[-0.055,-1.035],[-1.551,-0.354]],"o":[[-0.027,0.653],[-0.436,0.49],[-3.676,0.871],[-1.525,-0.19],[-0.409,-0.708],[-0.109,-1.225],[-0.299,-2.478],[4.193,-1.824],[0.816,0.272],[0.218,0.408],[0.027,0.19],[0.027,0.163],[-2.969,0.055],[-1.442,0.354],[-0.843,0.626],[0.081,1.607],[3.758,0.898]],"v":[[-27.242,30.462],[-27.785,32.205],[-29.528,33.049],[-40.827,33.702],[-44.802,31.796],[-45.374,29.428],[-46.082,24.771],[-45.258,10.945],[-31.154,11.299],[-29.058,12.742],[-27.731,22.076],[-27.676,22.621],[-27.622,23.138],[-36.389,24.308],[-40.447,25.97],[-41.971,28.556],[-38.595,31.442]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.898039221764,0.415686279535,0.380392163992,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":2,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.027,-2.233],[0,0],[0.408,-0.463],[0.653,-0.163],[3.757,0.463],[0.762,1.307],[0.081,0.817],[-3.43,1.47],[-4.139,-1.497],[-0.408,-0.762],[-0.055,-0.463],[-0.028,-0.354]],"o":[[0,0],[-0.027,0.653],[-0.436,0.49],[-3.676,0.871],[-1.525,-0.19],[-0.409,-0.708],[-0.246,-2.968],[4.193,-1.824],[0.816,0.272],[0.218,0.408],[0.027,0.354],[0.217,2.233]],"v":[[-27.239,29.863],[-27.239,30.462],[-27.783,32.205],[-29.526,33.049],[-40.825,33.702],[-44.8,31.796],[-45.371,29.428],[-45.256,10.945],[-31.152,11.299],[-29.055,12.742],[-27.728,22.076],[-27.619,23.138]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972549021244,0.568627476692,0.509803950787,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":2,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":9,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":220,"st":0,"bm":0}],"markers":[]}